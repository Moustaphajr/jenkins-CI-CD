pipeline {
    agent any

    environment {
        DOCKER_IMAGE_PREFIX = 'moustaphajr80' // Nom de l'utilisateur Docker Hub
        DOCKER_CREDENTIALS_ID = 'docker-hub-token' // ID des credentials Docker Hub dans Jenkins
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    credentialsId: 'github_credentials_id',
                    url: 'https://github.com/Moustaphajr/jenkins-CI-CD'
            }
        }

        stage('Install Docker Compose') {
            steps {
                script {
                    // Vérifier si docker-compose est installé, sinon le lier
                    sh 'which docker-compose || sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
                    sh 'sudo chmod +x /usr/local/bin/docker-compose'
                    sh 'which docker-compose'  // Vérification que docker-compose est installé
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Exécuter docker-compose build pour construire les images
                    sh 'docker-compose -f docker-compose.yml build'
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    // Se connecter à Docker Hub en utilisant les credentials Jenkins
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        echo 'Successfully logged in to Docker Hub'
                    }
                }
            }
        }

        stage('Tag and Push Docker Images') {
            steps {
                script {
                    // Taguer et pousser les images Docker
                    sh """
                    docker tag vote ${DOCKER_IMAGE_PREFIX}/vote:latest
                    docker tag result ${DOCKER_IMAGE_PREFIX}/result:latest
                    docker tag worker ${DOCKER_IMAGE_PREFIX}/worker:latest

                    docker push ${DOCKER_IMAGE_PREFIX}/vote:latest
                    docker push ${DOCKER_IMAGE_PREFIX}/result:latest
                    docker push ${DOCKER_IMAGE_PREFIX}/worker:latest
                    """
                }
            }
        }

        stage('Deploy with docker-compose') {
            steps {
                script {
                    // Démarrer les services avec docker-compose
                    sh 'docker-compose -f docker-compose.yml up -d'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline terminé.'
        }
    }
}
